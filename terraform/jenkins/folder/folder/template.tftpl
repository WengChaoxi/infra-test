<?xml version="1.1" encoding="UTF-8"?><com.cloudbees.hudson.plugins.folder.Folder plugin="${plugins.cloudbees-folder}">
  <!-- Note: This XML is generated by terraform. -->
  <actions/>
  %{~ if folder_description != "" ~}
  <description>${folder_description}</description>
  %{~ endif ~}
  <displayName>${folder_display_name}</displayName>
  <properties>
    <org.jenkinsci.plugins.docker.workflow.declarative.FolderConfig plugin="${plugins.docker-workflow}">
      <dockerLabel/>
      <registry plugin="${plugins.docker-commons}"/>
    </org.jenkinsci.plugins.docker.workflow.declarative.FolderConfig>
    <org.jenkinsci.plugins.workflow.libs.FolderLibraries plugin="${plugins.pipeline-groovy-lib}">
      <libraries>
        %{~ for x in shared_libraries ~}
        <org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>
          <name>${x.name}</name>
          <retriever class="org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever">
            <scm class="jenkins.plugins.git.GitSCMSource" plugin="${plugins.git}">
              <remote>${x.git.remote}</remote>
              %{~ if lookup(x.git, "credential_id", default_credential_id) != "" ~}
              <credentialsId>${lookup(x.git, "credential_id", default_credential_id)}</credentialsId>
              %{~ endif ~}
              <traits/>
            </scm>
            %{~ if lookup(x, "library_path", null) != null ~}
            <libraryPath>${x.library_path}</libraryPath>
            %{~ endif ~}
          </retriever>
          <defaultVersion>${x.version}</defaultVersion>
          <implicit>${lookup(x, "implicit", false)}</implicit>
          <allowVersionOverride>${lookup(x, "allow_version_override", false)}</allowVersionOverride>
          <includeInChangesets>${lookup(x, "include_in_change_sets", false)}</includeInChangesets>
          %{~ if lookup(x, "cache_config", null) != null ~}
          <cachingConfiguration>
            <refreshTimeMinutes>${lookup(x.cache_config, "refresh_time", 0)}</refreshTimeMinutes>
            %{~ if lookup(x.cache_config, "wildcard_exclude", null) != null ~}
            <excludedVersionsStr>${x.cache_config.wildcard_exclude}</excludedVersionsStr>
            %{~ endif ~}
          </cachingConfiguration>
          %{~ endif ~}
        </org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>
        %{~ endfor ~}
      </libraries>
    </org.jenkinsci.plugins.workflow.libs.FolderLibraries>
    <com.mig82.folders.properties.FolderProperties plugin="${plugins.folder-properties}">
      <properties>
        %{~ for x in folder_properties ~}
        <com.mig82.folders.properties.StringProperty>
          <key>${lookup(x, "name", "")}</key>
          <value>${lookup(x, "value", "")}</value>
        </com.mig82.folders.properties.StringProperty>
        %{~ endfor ~}
      </properties>
    </com.mig82.folders.properties.FolderProperties>
    <org.jenkinsci.plugins.pipeline.maven.MavenConfigFolderOverrideProperty plugin="${plugins.pipeline-maven}">
      %{~ if lookup(maven_config, "settings_config_id", null) != null ~}
      <settings class="org.jenkinsci.plugins.configfiles.maven.job.MvnSettingsProvider" plugin="${plugins.config-file-provider}">
        <settingsConfigId>${maven_config.settings_config_id}</settingsConfigId>
      </settings>
      %{~ endif ~}
      <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
      <override>${maven_config != null ? true : false}</override>
    </org.jenkinsci.plugins.pipeline.maven.MavenConfigFolderOverrideProperty>
  </properties>
  <folderViews class="com.cloudbees.hudson.plugins.folder.views.DefaultFolderViewHolder">
    <views>
      <hudson.model.AllView>
        <owner class="com.cloudbees.hudson.plugins.folder.Folder" reference="../../../.."/>
        <name>All</name>
        <filterExecutors>false</filterExecutors>
        <filterQueue>false</filterQueue>
        <properties class="hudson.model.View$PropertyList"/>
      </hudson.model.AllView>
    </views>
    <tabBar class="hudson.views.DefaultViewsTabBar"/>
  </folderViews>
  <healthMetrics>
    <com.cloudbees.hudson.plugins.folder.health.WorstChildHealthMetric>
      <nonRecursive>false</nonRecursive>
    </com.cloudbees.hudson.plugins.folder.health.WorstChildHealthMetric>
  </healthMetrics>
  %{~ if lookup(xml_nodes, "icon", null) != null ~}
  ${xml_nodes.icon}
  %{~ else ~}
  <icon class="com.cloudbees.hudson.plugins.folder.icons.StockFolderIcon"/>
  %{~ endif ~}
</com.cloudbees.hudson.plugins.folder.Folder>
